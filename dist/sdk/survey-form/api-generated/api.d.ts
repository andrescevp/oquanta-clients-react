/**
 * oQuanta Clients API
 * oQuanta API documentation
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface Block
 */
export interface Block {
    /**
     *
     * @type {string}
     * @memberof Block
     */
    'type': string;
    /**
     *
     * @type {BlockOptions}
     * @memberof Block
     */
    'options'?: BlockOptions | null;
    /**
     *
     * @type {Array<BlockChildrenInner>}
     * @memberof Block
     */
    'children'?: Array<BlockChildrenInner> | null;
    /**
     *
     * @type {string}
     * @memberof Block
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof Block
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof Block
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof Block
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof Block
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof Block
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof Block
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof Block
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof Block
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Block
     */
    'parentUniqueId'?: string | null;
}
/**
 *
 * @export
 * @interface BlockChildrenInner
 */
export interface BlockChildrenInner {
    /**
     *
     * @type {string}
     * @memberof BlockChildrenInner
     */
    'type': string;
    /**
     *
     * @type {QuestionStringOptions}
     * @memberof BlockChildrenInner
     */
    'options'?: QuestionStringOptions | null;
    /**
     *
     * @type {Array<LoopChildrenInner>}
     * @memberof BlockChildrenInner
     */
    'children'?: Array<LoopChildrenInner> | null;
    /**
     *
     * @type {string}
     * @memberof BlockChildrenInner
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof BlockChildrenInner
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof BlockChildrenInner
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof BlockChildrenInner
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof BlockChildrenInner
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof BlockChildrenInner
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof BlockChildrenInner
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof BlockChildrenInner
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof BlockChildrenInner
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BlockChildrenInner
     */
    'parentUniqueId'?: string | null;
    /**
     *
     * @type {Array<LoopConcept>}
     * @memberof BlockChildrenInner
     */
    'loopConcepts'?: Array<LoopConcept> | null;
    /**
     *
     * @type {string}
     * @memberof BlockChildrenInner
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof BlockChildrenInner
     */
    'help'?: string | null;
    /**
     *
     * @type {Array<ElementRow>}
     * @memberof BlockChildrenInner
     */
    'rows'?: Array<ElementRow> | null;
    /**
     *
     * @type {Array<ElementColumn>}
     * @memberof BlockChildrenInner
     */
    'columns'?: Array<ElementColumn> | null;
}
/**
 * @type BlockOptions
 * @export
 */
export type BlockOptions = ElementOptionsBlock;
/**
 *
 * @export
 * @interface BreakPage
 */
export interface BreakPage {
    /**
     *
     * @type {string}
     * @memberof BreakPage
     */
    'type': string;
    /**
     *
     * @type {string}
     * @memberof BreakPage
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof BreakPage
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof BreakPage
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof BreakPage
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof BreakPage
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof BreakPage
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof BreakPage
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof BreakPage
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof BreakPage
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof BreakPage
     */
    'parentUniqueId'?: string | null;
}
/**
 *
 * @export
 * @interface Credentials
 */
export interface Credentials {
    /**
     *
     * @type {string}
     * @memberof Credentials
     */
    'email'?: string;
    /**
     *
     * @type {string}
     * @memberof Credentials
     */
    'password'?: string;
}
/**
 *
 * @export
 * @interface ElementChoice
 */
export interface ElementChoice {
    /**
     *
     * @type {string}
     * @memberof ElementChoice
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof ElementChoice
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof ElementChoice
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof ElementChoice
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof ElementChoice
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof ElementChoice
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof ElementChoice
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof ElementChoice
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof ElementChoice
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof ElementChoice
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ElementChoice
     */
    'parentUniqueId'?: string | null;
}
/**
 *
 * @export
 * @interface ElementColumn
 */
export interface ElementColumn {
    /**
     *
     * @type {string}
     * @memberof ElementColumn
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof ElementColumn
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof ElementColumn
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof ElementColumn
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof ElementColumn
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof ElementColumn
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof ElementColumn
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof ElementColumn
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof ElementColumn
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof ElementColumn
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ElementColumn
     */
    'parentUniqueId'?: string | null;
}
/**
 *
 * @export
 * @interface ElementOptionsBlock
 */
export interface ElementOptionsBlock {
    /**
     *
     * @type {string}
     * @memberof ElementOptionsBlock
     */
    'condition'?: string | null;
}
/**
 *
 * @export
 * @interface ElementOptionsChoice
 */
export interface ElementOptionsChoice {
    /**
     * Multiple choice
     * @type {boolean}
     * @memberof ElementOptionsChoice
     */
    'multiple'?: boolean;
    /**
     * Minimum choices. Applicable only when multiple is true
     * @type {number}
     * @memberof ElementOptionsChoice
     */
    'minChoices'?: number;
    /**
     * Maximum choices. Applicable only when multiple is true
     * @type {number}
     * @memberof ElementOptionsChoice
     */
    'maxChoices': number;
    /**
     * Fixed number of choices. Applicable only when multiple is true. If set, minChoices and maxChoices are ignored
     * @type {number}
     * @memberof ElementOptionsChoice
     */
    'fixedChoices': number;
    /**
     * Hidden question
     * @type {boolean}
     * @memberof ElementOptionsChoice
     */
    'hidden'?: boolean;
    /**
     * Question condition
     * @type {string}
     * @memberof ElementOptionsChoice
     */
    'condition': string;
    /**
     * Required question
     * @type {boolean}
     * @memberof ElementOptionsChoice
     */
    'required'?: boolean;
    /**
     * Randomize rows
     * @type {string}
     * @memberof ElementOptionsChoice
     */
    'randomizeRows': string;
    /**
     * Randomize columns
     * @type {string}
     * @memberof ElementOptionsChoice
     */
    'randomizeColumns': string;
}
/**
 *
 * @export
 * @interface ElementOptionsLoop
 */
export interface ElementOptionsLoop {
    /**
     *
     * @type {string}
     * @memberof ElementOptionsLoop
     */
    'condition'?: string | null;
}
/**
 *
 * @export
 * @interface ElementOptionsMarker
 */
export interface ElementOptionsMarker {
    /**
     *
     * @type {string}
     * @memberof ElementOptionsMarker
     */
    'condition': string;
}
/**
 *
 * @export
 * @interface ElementOptionsNumber
 */
export interface ElementOptionsNumber {
    /**
     * Minimum value
     * @type {number}
     * @memberof ElementOptionsNumber
     */
    'min': number;
    /**
     * Maximum value
     * @type {number}
     * @memberof ElementOptionsNumber
     */
    'max': number;
    /**
     * Allow Decimal
     * @type {boolean}
     * @memberof ElementOptionsNumber
     */
    'decimal'?: boolean;
    /**
     * Unique values across all responses
     * @type {boolean}
     * @memberof ElementOptionsNumber
     */
    'unique'?: boolean;
    /**
     * Hidden question
     * @type {boolean}
     * @memberof ElementOptionsNumber
     */
    'hidden'?: boolean;
    /**
     * Question condition
     * @type {string}
     * @memberof ElementOptionsNumber
     */
    'condition': string;
    /**
     * Required question
     * @type {boolean}
     * @memberof ElementOptionsNumber
     */
    'required'?: boolean;
    /**
     * Randomize rows
     * @type {string}
     * @memberof ElementOptionsNumber
     */
    'randomizeRows': string;
    /**
     * Randomize columns
     * @type {string}
     * @memberof ElementOptionsNumber
     */
    'randomizeColumns': string;
}
/**
 *
 * @export
 * @interface ElementOptionsQuota
 */
export interface ElementOptionsQuota {
    /**
     *
     * @type {string}
     * @memberof ElementOptionsQuota
     */
    'condition': string;
}
/**
 *
 * @export
 * @interface ElementOptionsSelect
 */
export interface ElementOptionsSelect {
    /**
     * Multiple choice
     * @type {boolean}
     * @memberof ElementOptionsSelect
     */
    'multiple'?: boolean;
    /**
     * Randomize choices
     * @type {boolean}
     * @memberof ElementOptionsSelect
     */
    'randomizeChoices': boolean;
    /**
     * Minimum choices. Applicable only when multiple is true
     * @type {number}
     * @memberof ElementOptionsSelect
     */
    'minChoices'?: number;
    /**
     * Maximum choices. Applicable only when multiple is true
     * @type {number}
     * @memberof ElementOptionsSelect
     */
    'maxChoices': number;
    /**
     * Fixed number of choices. Applicable only when multiple is true. If set, minChoices and maxChoices are ignored
     * @type {number}
     * @memberof ElementOptionsSelect
     */
    'fixedChoices': number;
    /**
     * Unique choices
     * @type {boolean}
     * @memberof ElementOptionsSelect
     */
    'unique'?: boolean;
    /**
     * Hidden question
     * @type {boolean}
     * @memberof ElementOptionsSelect
     */
    'hidden'?: boolean;
    /**
     * Question condition
     * @type {string}
     * @memberof ElementOptionsSelect
     */
    'condition': string;
    /**
     * Required question
     * @type {boolean}
     * @memberof ElementOptionsSelect
     */
    'required'?: boolean;
    /**
     * Randomize rows
     * @type {string}
     * @memberof ElementOptionsSelect
     */
    'randomizeRows': string;
    /**
     * Randomize columns
     * @type {string}
     * @memberof ElementOptionsSelect
     */
    'randomizeColumns': string;
}
/**
 *
 * @export
 * @interface ElementOptionsString
 */
export interface ElementOptionsString {
    /**
     * Multiline text
     * @type {boolean}
     * @memberof ElementOptionsString
     */
    'multiline'?: boolean | null;
    /**
     * Placeholder text
     * @type {string}
     * @memberof ElementOptionsString
     */
    'placeholder'?: string | null;
    /**
     * Regular expression
     * @type {string}
     * @memberof ElementOptionsString
     */
    'regex'?: string | null;
    /**
     * Regular expression error message
     * @type {string}
     * @memberof ElementOptionsString
     */
    'regexErrorMessage'?: string | null;
    /**
     * Minimum length
     * @type {number}
     * @memberof ElementOptionsString
     */
    'minLength'?: number | null;
    /**
     * Maximum length
     * @type {number}
     * @memberof ElementOptionsString
     */
    'maxLength'?: number | null;
    /**
     * Hidden question
     * @type {boolean}
     * @memberof ElementOptionsString
     */
    'hidden'?: boolean;
    /**
     * Question condition
     * @type {string}
     * @memberof ElementOptionsString
     */
    'condition': string;
    /**
     * Required question
     * @type {boolean}
     * @memberof ElementOptionsString
     */
    'required'?: boolean;
    /**
     * Randomize rows
     * @type {string}
     * @memberof ElementOptionsString
     */
    'randomizeRows': string;
    /**
     * Randomize columns
     * @type {string}
     * @memberof ElementOptionsString
     */
    'randomizeColumns': string;
}
/**
 *
 * @export
 * @interface ElementOptionsTermination
 */
export interface ElementOptionsTermination {
    /**
     *
     * @type {string}
     * @memberof ElementOptionsTermination
     */
    'condition'?: string | null;
}
/**
 *
 * @export
 * @interface ElementOptionsText
 */
export interface ElementOptionsText {
    /**
     *
     * @type {string}
     * @memberof ElementOptionsText
     */
    'condition'?: string | null;
}
/**
 *
 * @export
 * @interface ElementRow
 */
export interface ElementRow {
    /**
     *
     * @type {string}
     * @memberof ElementRow
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof ElementRow
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof ElementRow
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof ElementRow
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof ElementRow
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof ElementRow
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof ElementRow
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof ElementRow
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof ElementRow
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof ElementRow
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ElementRow
     */
    'parentUniqueId'?: string | null;
}
/**
 *
 * @export
 * @interface FormSchema
 */
export interface FormSchema {
    /**
     *
     * @type {string}
     * @memberof FormSchema
     */
    'title'?: string | null;
    /**
     *
     * @type {{ [key: string]: FormSchemaPropertiesValue; }}
     * @memberof FormSchema
     */
    'properties'?: {
        [key: string]: FormSchemaPropertiesValue;
    };
    /**
     *
     * @type {Array<string>}
     * @memberof FormSchema
     */
    'required'?: Array<string>;
}
/**
 *
 * @export
 * @interface FormSchemaArray
 */
export interface FormSchemaArray {
    /**
     *
     * @type {string}
     * @memberof FormSchemaArray
     */
    'type'?: FormSchemaArrayTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FormSchemaArray
     */
    'title'?: string;
    /**
     *
     * @type {FormSchemaArrayItems}
     * @memberof FormSchemaArray
     */
    'items'?: FormSchemaArrayItems;
    /**
     *
     * @type {number}
     * @memberof FormSchemaArray
     */
    'propertyOrder'?: number;
}
export declare const FormSchemaArrayTypeEnum: {
    readonly Array: "array";
};
export type FormSchemaArrayTypeEnum = typeof FormSchemaArrayTypeEnum[keyof typeof FormSchemaArrayTypeEnum];
/**
 *
 * @export
 * @interface FormSchemaArrayItems
 */
export interface FormSchemaArrayItems {
    /**
     *
     * @type {string}
     * @memberof FormSchemaArrayItems
     */
    'title'?: string;
    /**
     *
     * @type {{ [key: string]: FormSchemaField; }}
     * @memberof FormSchemaArrayItems
     */
    'properties'?: {
        [key: string]: FormSchemaField;
    };
    /**
     *
     * @type {Array<string>}
     * @memberof FormSchemaArrayItems
     */
    'required'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof FormSchemaArrayItems
     */
    'type'?: string;
}
/**
 *
 * @export
 * @interface FormSchemaField
 */
export interface FormSchemaField {
    /**
     *
     * @type {string}
     * @memberof FormSchemaField
     */
    'type'?: FormSchemaFieldTypeEnum;
    /**
     *
     * @type {string}
     * @memberof FormSchemaField
     */
    'title'?: string;
    /**
     *
     * @type {number}
     * @memberof FormSchemaField
     */
    'propertyOrder'?: number;
    /**
     *
     * @type {{ [key: string]: any; }}
     * @memberof FormSchemaField
     */
    'attr'?: {
        [key: string]: any;
    };
    /**
     *
     * @type {string}
     * @memberof FormSchemaField
     */
    'default'?: string;
    /**
     *
     * @type {string}
     * @memberof FormSchemaField
     */
    'description'?: string;
}
export declare const FormSchemaFieldTypeEnum: {
    readonly String: "string";
    readonly Number: "number";
    readonly Integer: "integer";
    readonly Boolean: "boolean";
    readonly Object: "object";
};
export type FormSchemaFieldTypeEnum = typeof FormSchemaFieldTypeEnum[keyof typeof FormSchemaFieldTypeEnum];
/**
 * @type FormSchemaPropertiesValue
 * @export
 */
export type FormSchemaPropertiesValue = FormSchemaArray | FormSchemaField;
/**
 *
 * @export
 * @interface GenericError
 */
export interface GenericError {
    /**
     *
     * @type {number}
     * @memberof GenericError
     */
    'statusCode': number;
    /**
     *
     * @type {string}
     * @memberof GenericError
     */
    'message': string;
}
/**
 *
 * @export
 * @interface Loop
 */
export interface Loop {
    /**
     *
     * @type {string}
     * @memberof Loop
     */
    'type': string;
    /**
     *
     * @type {LoopOptions}
     * @memberof Loop
     */
    'options'?: LoopOptions | null;
    /**
     *
     * @type {Array<LoopChildrenInner>}
     * @memberof Loop
     */
    'children'?: Array<LoopChildrenInner> | null;
    /**
     *
     * @type {Array<LoopConcept>}
     * @memberof Loop
     */
    'loopConcepts'?: Array<LoopConcept> | null;
    /**
     *
     * @type {string}
     * @memberof Loop
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof Loop
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof Loop
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof Loop
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof Loop
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof Loop
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof Loop
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof Loop
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof Loop
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Loop
     */
    'parentUniqueId'?: string | null;
}
/**
 *
 * @export
 * @interface LoopChildrenInner
 */
export interface LoopChildrenInner {
    /**
     *
     * @type {string}
     * @memberof LoopChildrenInner
     */
    'type': string;
    /**
     *
     * @type {QuestionStringOptions}
     * @memberof LoopChildrenInner
     */
    'options'?: QuestionStringOptions | null;
    /**
     *
     * @type {Array<LoopChildrenInner>}
     * @memberof LoopChildrenInner
     */
    'children'?: Array<LoopChildrenInner> | null;
    /**
     *
     * @type {string}
     * @memberof LoopChildrenInner
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof LoopChildrenInner
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof LoopChildrenInner
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof LoopChildrenInner
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof LoopChildrenInner
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof LoopChildrenInner
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof LoopChildrenInner
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof LoopChildrenInner
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LoopChildrenInner
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LoopChildrenInner
     */
    'parentUniqueId'?: string | null;
    /**
     *
     * @type {Array<LoopConcept>}
     * @memberof LoopChildrenInner
     */
    'loopConcepts'?: Array<LoopConcept> | null;
    /**
     *
     * @type {string}
     * @memberof LoopChildrenInner
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof LoopChildrenInner
     */
    'help'?: string | null;
    /**
     *
     * @type {Array<ElementRow>}
     * @memberof LoopChildrenInner
     */
    'rows'?: Array<ElementRow> | null;
    /**
     *
     * @type {Array<ElementColumn>}
     * @memberof LoopChildrenInner
     */
    'columns'?: Array<ElementColumn> | null;
}
/**
 *
 * @export
 * @interface LoopConcept
 */
export interface LoopConcept {
    /**
     *
     * @type {string}
     * @memberof LoopConcept
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof LoopConcept
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof LoopConcept
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof LoopConcept
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof LoopConcept
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof LoopConcept
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof LoopConcept
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof LoopConcept
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof LoopConcept
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof LoopConcept
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof LoopConcept
     */
    'parentUniqueId'?: string | null;
}
/**
 * @type LoopOptions
 * @export
 */
export type LoopOptions = ElementOptionsLoop;
/**
 *
 * @export
 * @interface ModelValidationErrorModel
 */
export interface ModelValidationErrorModel {
    /**
     *
     * @type {Array<ModelValidationErrorPathModel>}
     * @memberof ModelValidationErrorModel
     */
    'errors': Array<ModelValidationErrorPathModel>;
    /**
     *
     * @type {number}
     * @memberof ModelValidationErrorModel
     */
    'statusCode': number;
    /**
     *
     * @type {string}
     * @memberof ModelValidationErrorModel
     */
    'message': string;
}
/**
 *
 * @export
 * @interface ModelValidationErrorPathModel
 */
export interface ModelValidationErrorPathModel {
    /**
     *
     * @type {string}
     * @memberof ModelValidationErrorPathModel
     */
    'path': string;
    /**
     *
     * @type {string}
     * @memberof ModelValidationErrorPathModel
     */
    'message': string;
}
/**
 *
 * @export
 * @interface NormalSchedule
 */
export interface NormalSchedule {
    /**
     *
     * @type {number}
     * @memberof NormalSchedule
     */
    'day'?: number | null;
    /**
     *
     * @type {Array<NormalSchedulePeriod>}
     * @memberof NormalSchedule
     */
    'periods'?: Array<NormalSchedulePeriod> | null;
}
/**
 *
 * @export
 * @interface NormalSchedulePeriod
 */
export interface NormalSchedulePeriod {
    /**
     *
     * @type {string}
     * @memberof NormalSchedulePeriod
     */
    'from'?: string | null;
    /**
     *
     * @type {string}
     * @memberof NormalSchedulePeriod
     */
    'to'?: string | null;
}
/**
 *
 * @export
 * @interface Organization
 */
export interface Organization {
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'legalId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'mainContactPhone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'secondaryContactPhone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'contactEmail'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'address'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'country'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'city'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Organization
     */
    'postalCode'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationBasic
 */
export interface OrganizationBasic {
    /**
     *
     * @type {string}
     * @memberof OrganizationBasic
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationBasic
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationBasic
     */
    'legalId'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationCreate
 */
export interface OrganizationCreate {
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'legalId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'mainContactPhone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'secondaryContactPhone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'contactEmail'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'address'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'country'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'city'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationCreate
     */
    'postalCode'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationList
 */
export interface OrganizationList {
    /**
     *
     * @type {Array<Organization>}
     * @memberof OrganizationList
     */
    'results': Array<Organization>;
    /**
     *
     * @type {number}
     * @memberof OrganizationList
     */
    'page': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationList
     */
    'lastPage': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationList
     */
    'nextPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationList
     */
    'previousPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationList
     */
    'count'?: number | null;
}
/**
 *
 * @export
 * @interface OrganizationPlace
 */
export interface OrganizationPlace {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'slug'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'longitude'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'latitude'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'address'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'postalCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'city'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'country'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'region'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlace
     */
    'organizationUuid'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationPlaceBasic
 */
export interface OrganizationPlaceBasic {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceBasic
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceBasic
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceBasic
     */
    'slug'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationPlaceCreate
 */
export interface OrganizationPlaceCreate {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'slug'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'longitude'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'latitude'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'address'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'postalCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'city'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'country'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'region'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceCreate
     */
    'organizationUuid': string;
}
/**
 *
 * @export
 * @interface OrganizationPlaceList
 */
export interface OrganizationPlaceList {
    /**
     *
     * @type {Array<OrganizationPlace>}
     * @memberof OrganizationPlaceList
     */
    'results': Array<OrganizationPlace>;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceList
     */
    'page': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceList
     */
    'lastPage': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceList
     */
    'nextPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceList
     */
    'previousPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceList
     */
    'count'?: number | null;
}
/**
 *
 * @export
 * @interface OrganizationPlaceResource
 */
export interface OrganizationPlaceResource {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'slug': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'longitude': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'latitude': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'address': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'postalCode': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'city': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'country': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'region': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceResource
     */
    'organizationUuid'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationPlaceSurvey
 */
export interface OrganizationPlaceSurvey {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'title'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof OrganizationPlaceSurvey
     */
    'active'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'alias'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'startAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'endAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'subsystem': OrganizationPlaceSurveySubsystemEnum;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'surveyType': OrganizationPlaceSurveySurveyTypeEnum;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'surveyOid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'lookerReportEmbedUrl'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurvey
     */
    'organizationPlaceUuid'?: string | null;
}
export declare const OrganizationPlaceSurveySubsystemEnum: {
    readonly Limesurvey: "limesurvey";
};
export type OrganizationPlaceSurveySubsystemEnum = typeof OrganizationPlaceSurveySubsystemEnum[keyof typeof OrganizationPlaceSurveySubsystemEnum];
export declare const OrganizationPlaceSurveySurveyTypeEnum: {
    readonly Tracker: "tracker";
    readonly Campaign: "campaign";
};
export type OrganizationPlaceSurveySurveyTypeEnum = typeof OrganizationPlaceSurveySurveyTypeEnum[keyof typeof OrganizationPlaceSurveySurveyTypeEnum];
/**
 *
 * @export
 * @interface OrganizationPlaceSurveyCreate
 */
export interface OrganizationPlaceSurveyCreate {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'title'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'active'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'alias'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'startAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'endAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'subsystem': OrganizationPlaceSurveyCreateSubsystemEnum;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'surveyType': OrganizationPlaceSurveyCreateSurveyTypeEnum;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'surveyOid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyCreate
     */
    'lookerReportEmbedUrl'?: string | null;
}
export declare const OrganizationPlaceSurveyCreateSubsystemEnum: {
    readonly Limesurvey: "limesurvey";
};
export type OrganizationPlaceSurveyCreateSubsystemEnum = typeof OrganizationPlaceSurveyCreateSubsystemEnum[keyof typeof OrganizationPlaceSurveyCreateSubsystemEnum];
export declare const OrganizationPlaceSurveyCreateSurveyTypeEnum: {
    readonly Tracker: "tracker";
    readonly Campaign: "campaign";
};
export type OrganizationPlaceSurveyCreateSurveyTypeEnum = typeof OrganizationPlaceSurveyCreateSurveyTypeEnum[keyof typeof OrganizationPlaceSurveyCreateSurveyTypeEnum];
/**
 *
 * @export
 * @interface OrganizationPlaceSurveyList
 */
export interface OrganizationPlaceSurveyList {
    /**
     *
     * @type {Array<OrganizationPlaceSurvey>}
     * @memberof OrganizationPlaceSurveyList
     */
    'results': Array<OrganizationPlaceSurvey>;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceSurveyList
     */
    'page': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceSurveyList
     */
    'lastPage': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceSurveyList
     */
    'nextPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceSurveyList
     */
    'previousPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationPlaceSurveyList
     */
    'count'?: number | null;
}
/**
 *
 * @export
 * @interface OrganizationPlaceSurveyUpdate
 */
export interface OrganizationPlaceSurveyUpdate {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'title'?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'active'?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'alias'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'startAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'endAt'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'subsystem': OrganizationPlaceSurveyUpdateSubsystemEnum;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'surveyType': OrganizationPlaceSurveyUpdateSurveyTypeEnum;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'surveyOid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceSurveyUpdate
     */
    'lookerReportEmbedUrl'?: string | null;
}
export declare const OrganizationPlaceSurveyUpdateSubsystemEnum: {
    readonly Limesurvey: "limesurvey";
};
export type OrganizationPlaceSurveyUpdateSubsystemEnum = typeof OrganizationPlaceSurveyUpdateSubsystemEnum[keyof typeof OrganizationPlaceSurveyUpdateSubsystemEnum];
export declare const OrganizationPlaceSurveyUpdateSurveyTypeEnum: {
    readonly Tracker: "tracker";
    readonly Campaign: "campaign";
};
export type OrganizationPlaceSurveyUpdateSurveyTypeEnum = typeof OrganizationPlaceSurveyUpdateSurveyTypeEnum[keyof typeof OrganizationPlaceSurveyUpdateSurveyTypeEnum];
/**
 *
 * @export
 * @interface OrganizationPlaceUpdate
 */
export interface OrganizationPlaceUpdate {
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'slug'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'longitude'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'latitude'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'address'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'postalCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'city'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'country'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationPlaceUpdate
     */
    'region'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationPlaceWorkingHours
 */
export interface OrganizationPlaceWorkingHours {
    /**
     *
     * @type {Array<NormalSchedule>}
     * @memberof OrganizationPlaceWorkingHours
     */
    'normalSchedule'?: Array<NormalSchedule>;
    /**
     *
     * @type {Array<SpecialSchedule>}
     * @memberof OrganizationPlaceWorkingHours
     */
    'specialSchedule'?: Array<SpecialSchedule>;
}
/**
 *
 * @export
 * @interface OrganizationPlaceWorkingHoursResource
 */
export interface OrganizationPlaceWorkingHoursResource {
    /**
     *
     * @type {Array<NormalSchedule>}
     * @memberof OrganizationPlaceWorkingHoursResource
     */
    'normalSchedule'?: Array<NormalSchedule>;
    /**
     *
     * @type {Array<SpecialSchedule>}
     * @memberof OrganizationPlaceWorkingHoursResource
     */
    'specialSchedule'?: Array<SpecialSchedule>;
}
/**
 *
 * @export
 * @interface OrganizationResource2
 */
export interface OrganizationResource2 {
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'legalId': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'mainContactPhone': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'secondaryContactPhone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'contactEmail': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'address': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'country': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'city': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationResource2
     */
    'postalCode': string;
}
/**
 *
 * @export
 * @interface OrganizationUpdate
 */
export interface OrganizationUpdate {
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'legalId'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'mainContactPhone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'secondaryContactPhone'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'contactEmail'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'address'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'country'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'city'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUpdate
     */
    'postalCode'?: string | null;
}
/**
 *
 * @export
 * @interface OrganizationUser
 */
export interface OrganizationUser {
    /**
     *
     * @type {number}
     * @memberof OrganizationUser
     */
    'id'?: number | null;
    /**
     *
     * @type {User}
     * @memberof OrganizationUser
     */
    'user': User;
    /**
     *
     * @type {Organization}
     * @memberof OrganizationUser
     */
    'organization': Organization;
    /**
     *
     * @type {Array<any>}
     * @memberof OrganizationUser
     */
    'roles'?: Array<any> | null;
}
/**
 *
 * @export
 * @interface OrganizationUserBasic
 */
export interface OrganizationUserBasic {
    /**
     *
     * @type {number}
     * @memberof OrganizationUserBasic
     */
    'id'?: number | null;
    /**
     *
     * @type {User}
     * @memberof OrganizationUserBasic
     */
    'user': User;
    /**
     *
     * @type {Organization}
     * @memberof OrganizationUserBasic
     */
    'organization': Organization;
}
/**
 *
 * @export
 * @interface OrganizationUserCreate
 */
export interface OrganizationUserCreate {
    /**
     *
     * @type {string}
     * @memberof OrganizationUserCreate
     */
    'userUuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof OrganizationUserCreate
     */
    'organizationUuid'?: string | null;
    /**
     *
     * @type {Array<any>}
     * @memberof OrganizationUserCreate
     */
    'roles'?: Array<any> | null;
}
/**
 *
 * @export
 * @interface OrganizationUserList
 */
export interface OrganizationUserList {
    /**
     *
     * @type {Array<OrganizationUser>}
     * @memberof OrganizationUserList
     */
    'results': Array<OrganizationUser>;
    /**
     *
     * @type {number}
     * @memberof OrganizationUserList
     */
    'page': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationUserList
     */
    'lastPage': number;
    /**
     *
     * @type {number}
     * @memberof OrganizationUserList
     */
    'nextPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationUserList
     */
    'previousPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof OrganizationUserList
     */
    'count'?: number | null;
}
/**
 *
 * @export
 * @interface OrganizationUserRequest
 */
export interface OrganizationUserRequest {
    /**
     *
     * @type {string}
     * @memberof OrganizationUserRequest
     */
    'userUuid': string;
    /**
     *
     * @type {string}
     * @memberof OrganizationUserRequest
     */
    'organizationUuid': string;
    /**
     *
     * @type {Array<any>}
     * @memberof OrganizationUserRequest
     */
    'roles'?: Array<any> | null;
}
/**
 *
 * @export
 * @interface OrganizationUserResource
 */
export interface OrganizationUserResource {
    /**
     *
     * @type {User}
     * @memberof OrganizationUserResource
     */
    'user': User;
    /**
     *
     * @type {Organization}
     * @memberof OrganizationUserResource
     */
    'organization': Organization;
    /**
     *
     * @type {Array<any>}
     * @memberof OrganizationUserResource
     */
    'roles'?: Array<any> | null;
}
/**
 *
 * @export
 * @interface OrganizationUserUpdate
 */
export interface OrganizationUserUpdate {
    /**
     *
     * @type {Array<any>}
     * @memberof OrganizationUserUpdate
     */
    'roles'?: Array<any> | null;
}
/**
 *
 * @export
 * @interface PatchApiOrganizationPlaceSurveysToggleActivationRequest
 */
export interface PatchApiOrganizationPlaceSurveysToggleActivationRequest {
    /**
     *
     * @type {boolean}
     * @memberof PatchApiOrganizationPlaceSurveysToggleActivationRequest
     */
    'active'?: boolean;
}
/**
 *
 * @export
 * @interface PostApiSendUserInvitation200Response
 */
export interface PostApiSendUserInvitation200Response {
    /**
     *
     * @type {string}
     * @memberof PostApiSendUserInvitation200Response
     */
    'message'?: string;
}
/**
 *
 * @export
 * @interface PostApiValidateInvitationToken200Response
 */
export interface PostApiValidateInvitationToken200Response {
    /**
     *
     * @type {boolean}
     * @memberof PostApiValidateInvitationToken200Response
     */
    'valid'?: boolean;
    /**
     *
     * @type {string}
     * @memberof PostApiValidateInvitationToken200Response
     */
    'userEmail'?: string | null;
}
/**
 *
 * @export
 * @interface PostApiValidateResetToken200Response
 */
export interface PostApiValidateResetToken200Response {
    /**
     *
     * @type {boolean}
     * @memberof PostApiValidateResetToken200Response
     */
    'valid'?: boolean;
}
/**
 *
 * @export
 * @interface QuestionChoice
 */
export interface QuestionChoice {
    /**
     *
     * @type {string}
     * @memberof QuestionChoice
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof QuestionChoice
     */
    'help'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionChoice
     */
    'type': string;
    /**
     *
     * @type {QuestionChoiceOptions}
     * @memberof QuestionChoice
     */
    'options'?: QuestionChoiceOptions | null;
    /**
     *
     * @type {Array<ElementRow>}
     * @memberof QuestionChoice
     */
    'rows'?: Array<ElementRow> | null;
    /**
     *
     * @type {Array<ElementColumn>}
     * @memberof QuestionChoice
     */
    'columns'?: Array<ElementColumn> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionChoice
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof QuestionChoice
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof QuestionChoice
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof QuestionChoice
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof QuestionChoice
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof QuestionChoice
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof QuestionChoice
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof QuestionChoice
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionChoice
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionChoice
     */
    'parentUniqueId'?: string | null;
}
/**
 * @type QuestionChoiceOptions
 * @export
 */
export type QuestionChoiceOptions = ElementOptionsChoice;
/**
 *
 * @export
 * @interface QuestionNumber
 */
export interface QuestionNumber {
    /**
     *
     * @type {string}
     * @memberof QuestionNumber
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof QuestionNumber
     */
    'help'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionNumber
     */
    'type': string;
    /**
     *
     * @type {QuestionNumberOptions}
     * @memberof QuestionNumber
     */
    'options'?: QuestionNumberOptions | null;
    /**
     *
     * @type {Array<ElementRow>}
     * @memberof QuestionNumber
     */
    'rows'?: Array<ElementRow> | null;
    /**
     *
     * @type {Array<ElementColumn>}
     * @memberof QuestionNumber
     */
    'columns'?: Array<ElementColumn> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionNumber
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof QuestionNumber
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof QuestionNumber
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof QuestionNumber
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof QuestionNumber
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof QuestionNumber
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof QuestionNumber
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof QuestionNumber
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionNumber
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionNumber
     */
    'parentUniqueId'?: string | null;
}
/**
 * @type QuestionNumberOptions
 * @export
 */
export type QuestionNumberOptions = ElementOptionsNumber;
/**
 *
 * @export
 * @interface QuestionSelect
 */
export interface QuestionSelect {
    /**
     *
     * @type {string}
     * @memberof QuestionSelect
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof QuestionSelect
     */
    'help'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionSelect
     */
    'type': string;
    /**
     *
     * @type {QuestionSelectOptions}
     * @memberof QuestionSelect
     */
    'options'?: QuestionSelectOptions | null;
    /**
     *
     * @type {Array<ElementRow>}
     * @memberof QuestionSelect
     */
    'rows'?: Array<ElementRow> | null;
    /**
     *
     * @type {Array<ElementColumn>}
     * @memberof QuestionSelect
     */
    'columns'?: Array<ElementColumn> | null;
    /**
     *
     * @type {Array<ElementChoice>}
     * @memberof QuestionSelect
     */
    'choices'?: Array<ElementChoice> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionSelect
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof QuestionSelect
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof QuestionSelect
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof QuestionSelect
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof QuestionSelect
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof QuestionSelect
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof QuestionSelect
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof QuestionSelect
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionSelect
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionSelect
     */
    'parentUniqueId'?: string | null;
}
/**
 * @type QuestionSelectOptions
 * @export
 */
export type QuestionSelectOptions = ElementOptionsSelect;
/**
 *
 * @export
 * @interface QuestionString
 */
export interface QuestionString {
    /**
     *
     * @type {string}
     * @memberof QuestionString
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof QuestionString
     */
    'help'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionString
     */
    'type': string;
    /**
     *
     * @type {QuestionStringOptions}
     * @memberof QuestionString
     */
    'options'?: QuestionStringOptions | null;
    /**
     *
     * @type {Array<ElementRow>}
     * @memberof QuestionString
     */
    'rows'?: Array<ElementRow> | null;
    /**
     *
     * @type {Array<ElementColumn>}
     * @memberof QuestionString
     */
    'columns'?: Array<ElementColumn> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionString
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof QuestionString
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof QuestionString
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof QuestionString
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof QuestionString
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof QuestionString
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof QuestionString
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof QuestionString
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof QuestionString
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof QuestionString
     */
    'parentUniqueId'?: string | null;
}
/**
 * @type QuestionStringOptions
 * @export
 */
export type QuestionStringOptions = ElementOptionsString;
/**
 *
 * @export
 * @interface ResetPassword
 */
export interface ResetPassword {
    /**
     *
     * @type {string}
     * @memberof ResetPassword
     */
    'token'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ResetPassword
     */
    'password'?: string | null;
}
/**
 *
 * @export
 * @interface ResetPasswordRequest
 */
export interface ResetPasswordRequest {
    /**
     *
     * @type {string}
     * @memberof ResetPasswordRequest
     */
    'email'?: string | null;
}
/**
 *
 * @export
 * @interface ResetPasswordRequestResource
 */
export interface ResetPasswordRequestResource {
    /**
     *
     * @type {string}
     * @memberof ResetPasswordRequestResource
     */
    'email': string;
}
/**
 *
 * @export
 * @interface ResetPasswordResource
 */
export interface ResetPasswordResource {
    /**
     *
     * @type {string}
     * @memberof ResetPasswordResource
     */
    'token': string;
    /**
     *
     * @type {string}
     * @memberof ResetPasswordResource
     */
    'password': string;
}
/**
 *
 * @export
 * @interface SpecialSchedule
 */
export interface SpecialSchedule {
    /**
     *
     * @type {string}
     * @memberof SpecialSchedule
     */
    'validFrom'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SpecialSchedule
     */
    'validThrough'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SpecialSchedule
     */
    'opens'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SpecialSchedule
     */
    'closes'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SpecialSchedule
     */
    'reason'?: string | null;
}
/**
 *
 * @export
 * @interface SurveyList
 */
export interface SurveyList {
    /**
     *
     * @type {Array<SurveyListItem>}
     * @memberof SurveyList
     */
    'results': Array<SurveyListItem>;
    /**
     *
     * @type {number}
     * @memberof SurveyList
     */
    'page': number;
    /**
     *
     * @type {number}
     * @memberof SurveyList
     */
    'lastPage': number;
    /**
     *
     * @type {number}
     * @memberof SurveyList
     */
    'nextPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SurveyList
     */
    'previousPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SurveyList
     */
    'count'?: number | null;
}
/**
 *
 * @export
 * @interface SurveyListItem
 */
export interface SurveyListItem {
    /**
     *
     * @type {string}
     * @memberof SurveyListItem
     */
    'uuid': string;
    /**
     *
     * @type {string}
     * @memberof SurveyListItem
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof SurveyListItem
     */
    'description'?: string | null;
}
/**
 *
 * @export
 * @interface SurveyModel
 */
export interface SurveyModel {
    /**
     *
     * @type {string}
     * @memberof SurveyModel
     */
    'uuid': string;
    /**
     *
     * @type {string}
     * @memberof SurveyModel
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof SurveyModel
     */
    'description'?: string | null;
    /**
     *
     * @type {Array<SurveyRequestChildrenInner>}
     * @memberof SurveyModel
     */
    'children'?: Array<SurveyRequestChildrenInner> | null;
}
/**
 *
 * @export
 * @interface SurveyRequest
 */
export interface SurveyRequest {
    /**
     *
     * @type {string}
     * @memberof SurveyRequest
     */
    'title': string;
    /**
     *
     * @type {string}
     * @memberof SurveyRequest
     */
    'description'?: string | null;
    /**
     *
     * @type {Array<SurveyRequestChildrenInner>}
     * @memberof SurveyRequest
     */
    'children'?: Array<SurveyRequestChildrenInner> | null;
}
/**
 *
 * @export
 * @interface SurveyRequestChildrenInner
 */
export interface SurveyRequestChildrenInner {
    /**
     *
     * @type {string}
     * @memberof SurveyRequestChildrenInner
     */
    'type': string;
    /**
     *
     * @type {QuestionSelectOptions}
     * @memberof SurveyRequestChildrenInner
     */
    'options'?: QuestionSelectOptions | null;
    /**
     *
     * @type {Array<LoopChildrenInner>}
     * @memberof SurveyRequestChildrenInner
     */
    'children'?: Array<LoopChildrenInner> | null;
    /**
     *
     * @type {string}
     * @memberof SurveyRequestChildrenInner
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof SurveyRequestChildrenInner
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof SurveyRequestChildrenInner
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof SurveyRequestChildrenInner
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof SurveyRequestChildrenInner
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof SurveyRequestChildrenInner
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof SurveyRequestChildrenInner
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof SurveyRequestChildrenInner
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof SurveyRequestChildrenInner
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof SurveyRequestChildrenInner
     */
    'parentUniqueId'?: string | null;
    /**
     *
     * @type {Array<LoopConcept>}
     * @memberof SurveyRequestChildrenInner
     */
    'loopConcepts'?: Array<LoopConcept> | null;
    /**
     *
     * @type {string}
     * @memberof SurveyRequestChildrenInner
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof SurveyRequestChildrenInner
     */
    'help'?: string | null;
    /**
     *
     * @type {Array<ElementRow>}
     * @memberof SurveyRequestChildrenInner
     */
    'rows'?: Array<ElementRow> | null;
    /**
     *
     * @type {Array<ElementColumn>}
     * @memberof SurveyRequestChildrenInner
     */
    'columns'?: Array<ElementColumn> | null;
    /**
     *
     * @type {Array<ElementChoice>}
     * @memberof SurveyRequestChildrenInner
     */
    'choices'?: Array<ElementChoice> | null;
}
/**
 *
 * @export
 * @interface Text
 */
export interface Text {
    /**
     *
     * @type {string}
     * @memberof Text
     */
    'code': string;
    /**
     *
     * @type {string}
     * @memberof Text
     */
    'label': string;
    /**
     *
     * @type {string}
     * @memberof Text
     */
    'type': string;
    /**
     *
     * @type {ElementOptionsText}
     * @memberof Text
     */
    'options': ElementOptionsText;
    /**
     *
     * @type {string}
     * @memberof Text
     */
    'uniqueId': string;
    /**
     *
     * @type {number}
     * @memberof Text
     */
    'parentIndex'?: number | null;
    /**
     *
     * @type {number}
     * @memberof Text
     */
    'index': number;
    /**
     *
     * @type {number}
     * @memberof Text
     */
    'depth': number;
    /**
     *
     * @type {boolean}
     * @memberof Text
     */
    'isLast': boolean;
    /**
     *
     * @type {Array<number>}
     * @memberof Text
     */
    'parentIndexes'?: Array<number> | null;
    /**
     *
     * @type {Array<string>}
     * @memberof Text
     */
    'parentCodes'?: Array<string> | null;
    /**
     *
     * @type {string}
     * @memberof Text
     */
    'parentCode'?: string | null;
    /**
     *
     * @type {string}
     * @memberof Text
     */
    'parentUniqueId'?: string | null;
}
/**
 *
 * @export
 * @interface Token
 */
export interface Token {
    /**
     *
     * @type {string}
     * @memberof Token
     */
    'token'?: string;
}
/**
 *
 * @export
 * @interface TokenValidation
 */
export interface TokenValidation {
    /**
     *
     * @type {string}
     * @memberof TokenValidation
     */
    'token'?: string | null;
}
/**
 *
 * @export
 * @interface TokenValidationResource
 */
export interface TokenValidationResource {
    /**
     *
     * @type {string}
     * @memberof TokenValidationResource
     */
    'token': string;
}
/**
 *
 * @export
 * @interface User
 */
export interface User {
    /**
     *
     * @type {string}
     * @memberof User
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof User
     */
    'email'?: string | null;
    /**
     *
     * @type {string}
     * @memberof User
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof User
     */
    'lastName'?: string | null;
    /**
     *
     * @type {Array<any>}
     * @memberof User
     */
    'roles'?: Array<any>;
}
/**
 *
 * @export
 * @interface UserBasic
 */
export interface UserBasic {
    /**
     *
     * @type {string}
     * @memberof UserBasic
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserBasic
     */
    'email'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserBasic
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserBasic
     */
    'lastName'?: string | null;
}
/**
 *
 * @export
 * @interface UserCreate
 */
export interface UserCreate {
    /**
     *
     * @type {string}
     * @memberof UserCreate
     */
    'email'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserCreate
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserCreate
     */
    'lastName'?: string | null;
    /**
     *
     * @type {Array<any>}
     * @memberof UserCreate
     */
    'roles'?: Array<any>;
}
/**
 *
 * @export
 * @interface UserInvitationAccept
 */
export interface UserInvitationAccept {
    /**
     *
     * @type {string}
     * @memberof UserInvitationAccept
     */
    'token'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserInvitationAccept
     */
    'password'?: string | null;
}
/**
 *
 * @export
 * @interface UserInvitationAcceptResource
 */
export interface UserInvitationAcceptResource {
    /**
     *
     * @type {string}
     * @memberof UserInvitationAcceptResource
     */
    'token': string;
    /**
     *
     * @type {string}
     * @memberof UserInvitationAcceptResource
     */
    'password': string;
}
/**
 *
 * @export
 * @interface UserInvitationRequest
 */
export interface UserInvitationRequest {
    /**
     *
     * @type {string}
     * @memberof UserInvitationRequest
     */
    'userUuid'?: string | null;
}
/**
 *
 * @export
 * @interface UserInvitationRequestResource
 */
export interface UserInvitationRequestResource {
    /**
     *
     * @type {string}
     * @memberof UserInvitationRequestResource
     */
    'userUuid': string;
}
/**
 *
 * @export
 * @interface UserInvitationValidation
 */
export interface UserInvitationValidation {
    /**
     *
     * @type {string}
     * @memberof UserInvitationValidation
     */
    'token'?: string | null;
}
/**
 *
 * @export
 * @interface UserInvitationValidationResource
 */
export interface UserInvitationValidationResource {
    /**
     *
     * @type {string}
     * @memberof UserInvitationValidationResource
     */
    'token': string;
}
/**
 *
 * @export
 * @interface UserList
 */
export interface UserList {
    /**
     *
     * @type {Array<User>}
     * @memberof UserList
     */
    'results': Array<User>;
    /**
     *
     * @type {number}
     * @memberof UserList
     */
    'page': number;
    /**
     *
     * @type {number}
     * @memberof UserList
     */
    'lastPage': number;
    /**
     *
     * @type {number}
     * @memberof UserList
     */
    'nextPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof UserList
     */
    'previousPage'?: number | null;
    /**
     *
     * @type {number}
     * @memberof UserList
     */
    'count'?: number | null;
}
/**
 *
 * @export
 * @interface UserResource2
 */
export interface UserResource2 {
    /**
     *
     * @type {string}
     * @memberof UserResource2
     */
    'uuid'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserResource2
     */
    'email': string;
    /**
     *
     * @type {string}
     * @memberof UserResource2
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof UserResource2
     */
    'lastName': string;
    /**
     *
     * @type {Array<any>}
     * @memberof UserResource2
     */
    'roles'?: Array<any>;
}
/**
 *
 * @export
 * @interface UserUpdate
 */
export interface UserUpdate {
    /**
     *
     * @type {string}
     * @memberof UserUpdate
     */
    'email'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserUpdate
     */
    'name'?: string | null;
    /**
     *
     * @type {string}
     * @memberof UserUpdate
     */
    'lastName'?: string | null;
    /**
     *
     * @type {Array<any>}
     * @memberof UserUpdate
     */
    'roles'?: Array<any>;
}
/**
 *
 * @export
 * @interface ValidationError
 */
export interface ValidationError {
    /**
     *
     * @type {string}
     * @memberof ValidationError
     */
    'type'?: string | null;
    /**
     *
     * @type {string}
     * @memberof ValidationError
     */
    'title'?: string;
    /**
     *
     * @type {number}
     * @memberof ValidationError
     */
    'status'?: number;
    /**
     *
     * @type {string}
     * @memberof ValidationError
     */
    'detail'?: string;
    /**
     *
     * @type {Array<ValidationErrorViolationsInner>}
     * @memberof ValidationError
     */
    'violations'?: Array<ValidationErrorViolationsInner>;
    /**
     *
     * @type {string}
     * @memberof ValidationError
     */
    'class'?: string | null;
    /**
     *
     * @type {Array<ValidationErrorTraceInner>}
     * @memberof ValidationError
     */
    'trace'?: Array<ValidationErrorTraceInner> | null;
}
/**
 *
 * @export
 * @interface ValidationErrorTraceInner
 */
export interface ValidationErrorTraceInner {
    /**
     *
     * @type {string}
     * @memberof ValidationErrorTraceInner
     */
    'namespace'?: string;
    /**
     *
     * @type {string}
     * @memberof ValidationErrorTraceInner
     */
    'short_class'?: string;
    /**
     *
     * @type {string}
     * @memberof ValidationErrorTraceInner
     */
    'class'?: string;
    /**
     *
     * @type {string}
     * @memberof ValidationErrorTraceInner
     */
    'type'?: string;
    /**
     *
     * @type {string}
     * @memberof ValidationErrorTraceInner
     */
    'function'?: string;
    /**
     *
     * @type {string}
     * @memberof ValidationErrorTraceInner
     */
    'file'?: string;
    /**
     *
     * @type {number}
     * @memberof ValidationErrorTraceInner
     */
    'line'?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof ValidationErrorTraceInner
     */
    'args'?: Array<string>;
}
/**
 *
 * @export
 * @interface ValidationErrorViolationsInner
 */
export interface ValidationErrorViolationsInner {
    /**
     *
     * @type {string}
     * @memberof ValidationErrorViolationsInner
     */
    'propertyPath'?: string;
    /**
     *
     * @type {string}
     * @memberof ValidationErrorViolationsInner
     */
    'title'?: string;
    /**
     *
     * @type {string}
     * @memberof ValidationErrorViolationsInner
     */
    'template'?: string;
    /**
     *
     * @type {Array<string>}
     * @memberof ValidationErrorViolationsInner
     */
    'parameters'?: Array<string>;
}
/**
 * AuthApi - axios parameter creator
 * @export
 */
export declare const AuthApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get JWT token for authentication.
     * @param {Credentials} [credentials] Create new JWT Token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthToken: (credentials?: Credentials, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuthApi - functional programming interface
 * @export
 */
export declare const AuthApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get JWT token for authentication.
     * @param {Credentials} [credentials] Create new JWT Token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthToken(credentials?: Credentials, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Token>>;
};
/**
 * AuthApi - factory interface
 * @export
 */
export declare const AuthApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get JWT token for authentication.
     * @param {Credentials} [credentials] Create new JWT Token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthToken(credentials?: Credentials, options?: RawAxiosRequestConfig): AxiosPromise<Token>;
};
/**
 * AuthApi - object-oriented interface
 * @export
 * @class AuthApi
 * @extends {BaseAPI}
 */
export declare class AuthApi extends BaseAPI {
    /**
     *
     * @summary Get JWT token for authentication.
     * @param {Credentials} [credentials] Create new JWT Token
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthApi
     */
    getAuthToken(credentials?: Credentials, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Token, any>>;
}
/**
 * OrganizationPlaceSurveysApi - axios parameter creator
 * @export
 */
export declare const OrganizationPlaceSurveysApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationPlaceSurveysDelete: (placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceSurveysGet: (placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} placeUuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationPlaceSurveysListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceSurveysList: (placeUuid: string, page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlaceSurveysListOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {PatchApiOrganizationPlaceSurveysToggleActivationRequest} patchApiOrganizationPlaceSurveysToggleActivationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchApiOrganizationPlaceSurveysToggleActivation: (placeUuid: string, surveyUuid: string, patchApiOrganizationPlaceSurveysToggleActivationRequest: PatchApiOrganizationPlaceSurveysToggleActivationRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} placeUuid
     * @param {OrganizationPlaceSurveyCreate} organizationPlaceSurveyCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlaceSurveysCreate: (placeUuid: string, organizationPlaceSurveyCreate: OrganizationPlaceSurveyCreate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {OrganizationPlaceSurveyUpdate} organizationPlaceSurveyUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlaceSurveysUpdate: (placeUuid: string, surveyUuid: string, organizationPlaceSurveyUpdate: OrganizationPlaceSurveyUpdate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OrganizationPlaceSurveysApi - functional programming interface
 * @export
 */
export declare const OrganizationPlaceSurveysApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationPlaceSurveysDelete(placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceSurveysGet(placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlaceSurvey>>;
    /**
     *
     * @param {string} placeUuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationPlaceSurveysListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceSurveysList(placeUuid: string, page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlaceSurveysListOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlaceSurveyList>>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {PatchApiOrganizationPlaceSurveysToggleActivationRequest} patchApiOrganizationPlaceSurveysToggleActivationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchApiOrganizationPlaceSurveysToggleActivation(placeUuid: string, surveyUuid: string, patchApiOrganizationPlaceSurveysToggleActivationRequest: PatchApiOrganizationPlaceSurveysToggleActivationRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlaceSurvey>>;
    /**
     *
     * @param {string} placeUuid
     * @param {OrganizationPlaceSurveyCreate} organizationPlaceSurveyCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlaceSurveysCreate(placeUuid: string, organizationPlaceSurveyCreate: OrganizationPlaceSurveyCreate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlaceSurvey>>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {OrganizationPlaceSurveyUpdate} organizationPlaceSurveyUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlaceSurveysUpdate(placeUuid: string, surveyUuid: string, organizationPlaceSurveyUpdate: OrganizationPlaceSurveyUpdate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlaceSurvey>>;
};
/**
 * OrganizationPlaceSurveysApi - factory interface
 * @export
 */
export declare const OrganizationPlaceSurveysApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationPlaceSurveysDelete(placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceSurveysGet(placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlaceSurvey>;
    /**
     *
     * @param {string} placeUuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationPlaceSurveysListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceSurveysList(placeUuid: string, page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlaceSurveysListOrderEnum, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlaceSurveyList>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {PatchApiOrganizationPlaceSurveysToggleActivationRequest} patchApiOrganizationPlaceSurveysToggleActivationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchApiOrganizationPlaceSurveysToggleActivation(placeUuid: string, surveyUuid: string, patchApiOrganizationPlaceSurveysToggleActivationRequest: PatchApiOrganizationPlaceSurveysToggleActivationRequest, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlaceSurvey>;
    /**
     *
     * @param {string} placeUuid
     * @param {OrganizationPlaceSurveyCreate} organizationPlaceSurveyCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlaceSurveysCreate(placeUuid: string, organizationPlaceSurveyCreate: OrganizationPlaceSurveyCreate, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlaceSurvey>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {OrganizationPlaceSurveyUpdate} organizationPlaceSurveyUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlaceSurveysUpdate(placeUuid: string, surveyUuid: string, organizationPlaceSurveyUpdate: OrganizationPlaceSurveyUpdate, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlaceSurvey>;
};
/**
 * OrganizationPlaceSurveysApi - object-oriented interface
 * @export
 * @class OrganizationPlaceSurveysApi
 * @extends {BaseAPI}
 */
export declare class OrganizationPlaceSurveysApi extends BaseAPI {
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceSurveysApi
     */
    deleteApiOrganizationPlaceSurveysDelete(placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceSurveysApi
     */
    getApiOrganizationPlaceSurveysGet(placeUuid: string, surveyUuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlaceSurvey, any>>;
    /**
     *
     * @param {string} placeUuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationPlaceSurveysListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceSurveysApi
     */
    getApiOrganizationPlaceSurveysList(placeUuid: string, page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlaceSurveysListOrderEnum, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlaceSurveyList, any>>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {PatchApiOrganizationPlaceSurveysToggleActivationRequest} patchApiOrganizationPlaceSurveysToggleActivationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceSurveysApi
     */
    patchApiOrganizationPlaceSurveysToggleActivation(placeUuid: string, surveyUuid: string, patchApiOrganizationPlaceSurveysToggleActivationRequest: PatchApiOrganizationPlaceSurveysToggleActivationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlaceSurvey, any>>;
    /**
     *
     * @param {string} placeUuid
     * @param {OrganizationPlaceSurveyCreate} organizationPlaceSurveyCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceSurveysApi
     */
    postApiOrganizationPlaceSurveysCreate(placeUuid: string, organizationPlaceSurveyCreate: OrganizationPlaceSurveyCreate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlaceSurvey, any>>;
    /**
     *
     * @param {string} placeUuid
     * @param {string} surveyUuid
     * @param {OrganizationPlaceSurveyUpdate} organizationPlaceSurveyUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceSurveysApi
     */
    putApiOrganizationPlaceSurveysUpdate(placeUuid: string, surveyUuid: string, organizationPlaceSurveyUpdate: OrganizationPlaceSurveyUpdate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlaceSurvey, any>>;
}
/**
 * @export
 */
export declare const GetApiOrganizationPlaceSurveysListOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiOrganizationPlaceSurveysListOrderEnum = typeof GetApiOrganizationPlaceSurveysListOrderEnum[keyof typeof GetApiOrganizationPlaceSurveysListOrderEnum];
/**
 * OrganizationPlaceWorkingHoursApi - axios parameter creator
 * @export
 */
export declare const OrganizationPlaceWorkingHoursApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {string} [date] Date to check (YYYY-MM-DD)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceWorkingHoursCheckDate: (uuid: string, date?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceWorkingHoursGet: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlaceWorkingHoursReset: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlaceWorkingHoursUpdate: (uuid: string, body: object, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OrganizationPlaceWorkingHoursApi - functional programming interface
 * @export
 */
export declare const OrganizationPlaceWorkingHoursApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {string} [date] Date to check (YYYY-MM-DD)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceWorkingHoursCheckDate(uuid: string, date?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceWorkingHoursGet(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlaceWorkingHours>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlaceWorkingHoursReset(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @param {string} uuid
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlaceWorkingHoursUpdate(uuid: string, body: object, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
};
/**
 * OrganizationPlaceWorkingHoursApi - factory interface
 * @export
 */
export declare const OrganizationPlaceWorkingHoursApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} uuid
     * @param {string} [date] Date to check (YYYY-MM-DD)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceWorkingHoursCheckDate(uuid: string, date?: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlaceWorkingHoursGet(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlaceWorkingHours>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlaceWorkingHoursReset(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @param {string} uuid
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlaceWorkingHoursUpdate(uuid: string, body: object, options?: RawAxiosRequestConfig): AxiosPromise<object>;
};
/**
 * OrganizationPlaceWorkingHoursApi - object-oriented interface
 * @export
 * @class OrganizationPlaceWorkingHoursApi
 * @extends {BaseAPI}
 */
export declare class OrganizationPlaceWorkingHoursApi extends BaseAPI {
    /**
     *
     * @param {string} uuid
     * @param {string} [date] Date to check (YYYY-MM-DD)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceWorkingHoursApi
     */
    getApiOrganizationPlaceWorkingHoursCheckDate(uuid: string, date?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceWorkingHoursApi
     */
    getApiOrganizationPlaceWorkingHoursGet(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlaceWorkingHours, any>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceWorkingHoursApi
     */
    postApiOrganizationPlaceWorkingHoursReset(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @param {string} uuid
     * @param {object} body
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlaceWorkingHoursApi
     */
    putApiOrganizationPlaceWorkingHoursUpdate(uuid: string, body: object, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
}
/**
 * OrganizationPlacesApi - axios parameter creator
 * @export
 */
export declare const OrganizationPlacesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationPlacesDelete: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlacesGet: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationPlacesListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {string} [organization] Organization UUID to filter by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlacesList: (page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlacesListOrderEnum, organization?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {OrganizationPlaceCreate} organizationPlaceCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlacesCreate: (organizationPlaceCreate: OrganizationPlaceCreate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationPlaceUpdate} organizationPlaceUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlacesUpdate: (uuid: string, organizationPlaceUpdate: OrganizationPlaceUpdate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OrganizationPlacesApi - functional programming interface
 * @export
 */
export declare const OrganizationPlacesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationPlacesDelete(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlacesGet(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlace>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationPlacesListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {string} [organization] Organization UUID to filter by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlacesList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlacesListOrderEnum, organization?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlaceList>>;
    /**
     *
     * @param {OrganizationPlaceCreate} organizationPlaceCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlacesCreate(organizationPlaceCreate: OrganizationPlaceCreate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlace>>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationPlaceUpdate} organizationPlaceUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlacesUpdate(uuid: string, organizationPlaceUpdate: OrganizationPlaceUpdate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationPlace>>;
};
/**
 * OrganizationPlacesApi - factory interface
 * @export
 */
export declare const OrganizationPlacesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationPlacesDelete(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlacesGet(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlace>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationPlacesListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {string} [organization] Organization UUID to filter by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationPlacesList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlacesListOrderEnum, organization?: string, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlaceList>;
    /**
     *
     * @param {OrganizationPlaceCreate} organizationPlaceCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationPlacesCreate(organizationPlaceCreate: OrganizationPlaceCreate, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlace>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationPlaceUpdate} organizationPlaceUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationPlacesUpdate(uuid: string, organizationPlaceUpdate: OrganizationPlaceUpdate, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationPlace>;
};
/**
 * OrganizationPlacesApi - object-oriented interface
 * @export
 * @class OrganizationPlacesApi
 * @extends {BaseAPI}
 */
export declare class OrganizationPlacesApi extends BaseAPI {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlacesApi
     */
    deleteApiOrganizationPlacesDelete(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlacesApi
     */
    getApiOrganizationPlacesGet(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlace, any>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationPlacesListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {string} [organization] Organization UUID to filter by
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlacesApi
     */
    getApiOrganizationPlacesList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationPlacesListOrderEnum, organization?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlaceList, any>>;
    /**
     *
     * @param {OrganizationPlaceCreate} organizationPlaceCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlacesApi
     */
    postApiOrganizationPlacesCreate(organizationPlaceCreate: OrganizationPlaceCreate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlace, any>>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationPlaceUpdate} organizationPlaceUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationPlacesApi
     */
    putApiOrganizationPlacesUpdate(uuid: string, organizationPlaceUpdate: OrganizationPlaceUpdate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationPlace, any>>;
}
/**
 * @export
 */
export declare const GetApiOrganizationPlacesListOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiOrganizationPlacesListOrderEnum = typeof GetApiOrganizationPlacesListOrderEnum[keyof typeof GetApiOrganizationPlacesListOrderEnum];
/**
 * OrganizationUsersApi - axios parameter creator
 * @export
 */
export declare const OrganizationUsersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationUsersDelete: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByOrganizationOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersByOrganization: (uuid: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByOrganizationOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByUserOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersByUser: (id: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByUserOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersGet: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [organization] Organization UUID
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersList: (page?: number, limit?: number, search?: string, organization?: string, sort?: string, order?: GetApiOrganizationUsersListOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {OrganizationUserCreate} organizationUserCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationUsersCreate: (organizationUserCreate: OrganizationUserCreate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {OrganizationUserUpdate} organizationUserUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationUsersUpdate: (id: string, organizationUserUpdate: OrganizationUserUpdate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OrganizationUsersApi - functional programming interface
 * @export
 */
export declare const OrganizationUsersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationUsersDelete(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} uuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByOrganizationOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersByOrganization(uuid: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByOrganizationOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationUserList>>;
    /**
     *
     * @param {string} id
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByUserOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersByUser(id: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByUserOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationUserList>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersGet(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationUser>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [organization] Organization UUID
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersList(page?: number, limit?: number, search?: string, organization?: string, sort?: string, order?: GetApiOrganizationUsersListOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationUserList>>;
    /**
     *
     * @param {OrganizationUserCreate} organizationUserCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationUsersCreate(organizationUserCreate: OrganizationUserCreate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationUser>>;
    /**
     *
     * @param {string} id
     * @param {OrganizationUserUpdate} organizationUserUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationUsersUpdate(id: string, organizationUserUpdate: OrganizationUserUpdate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationUser>>;
};
/**
 * OrganizationUsersApi - factory interface
 * @export
 */
export declare const OrganizationUsersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationUsersDelete(id: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} uuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByOrganizationOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersByOrganization(uuid: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByOrganizationOrderEnum, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationUserList>;
    /**
     *
     * @param {string} id
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByUserOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersByUser(id: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByUserOrderEnum, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationUserList>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersGet(id: string, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationUser>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [organization] Organization UUID
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationUsersList(page?: number, limit?: number, search?: string, organization?: string, sort?: string, order?: GetApiOrganizationUsersListOrderEnum, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationUserList>;
    /**
     *
     * @param {OrganizationUserCreate} organizationUserCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationUsersCreate(organizationUserCreate: OrganizationUserCreate, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationUser>;
    /**
     *
     * @param {string} id
     * @param {OrganizationUserUpdate} organizationUserUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationUsersUpdate(id: string, organizationUserUpdate: OrganizationUserUpdate, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationUser>;
};
/**
 * OrganizationUsersApi - object-oriented interface
 * @export
 * @class OrganizationUsersApi
 * @extends {BaseAPI}
 */
export declare class OrganizationUsersApi extends BaseAPI {
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationUsersApi
     */
    deleteApiOrganizationUsersDelete(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} uuid
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByOrganizationOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationUsersApi
     */
    getApiOrganizationUsersByOrganization(uuid: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByOrganizationOrderEnum, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationUserList, any>>;
    /**
     *
     * @param {string} id
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersByUserOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationUsersApi
     */
    getApiOrganizationUsersByUser(id: string, page?: number, limit?: number, sort?: string, order?: GetApiOrganizationUsersByUserOrderEnum, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationUserList, any>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationUsersApi
     */
    getApiOrganizationUsersGet(id: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationUser, any>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [organization] Organization UUID
     * @param {string} [sort] Field to sort by
     * @param {GetApiOrganizationUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationUsersApi
     */
    getApiOrganizationUsersList(page?: number, limit?: number, search?: string, organization?: string, sort?: string, order?: GetApiOrganizationUsersListOrderEnum, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationUserList, any>>;
    /**
     *
     * @param {OrganizationUserCreate} organizationUserCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationUsersApi
     */
    postApiOrganizationUsersCreate(organizationUserCreate: OrganizationUserCreate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationUser, any>>;
    /**
     *
     * @param {string} id
     * @param {OrganizationUserUpdate} organizationUserUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationUsersApi
     */
    putApiOrganizationUsersUpdate(id: string, organizationUserUpdate: OrganizationUserUpdate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationUser, any>>;
}
/**
 * @export
 */
export declare const GetApiOrganizationUsersByOrganizationOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiOrganizationUsersByOrganizationOrderEnum = typeof GetApiOrganizationUsersByOrganizationOrderEnum[keyof typeof GetApiOrganizationUsersByOrganizationOrderEnum];
/**
 * @export
 */
export declare const GetApiOrganizationUsersByUserOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiOrganizationUsersByUserOrderEnum = typeof GetApiOrganizationUsersByUserOrderEnum[keyof typeof GetApiOrganizationUsersByUserOrderEnum];
/**
 * @export
 */
export declare const GetApiOrganizationUsersListOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiOrganizationUsersListOrderEnum = typeof GetApiOrganizationUsersListOrderEnum[keyof typeof GetApiOrganizationUsersListOrderEnum];
/**
 * OrganizationsApi - axios parameter creator
 * @export
 */
export declare const OrganizationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationsDelete: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationsGet: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationsListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationsList: (page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationsListOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {OrganizationCreate} organizationCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationsCreate: (organizationCreate: OrganizationCreate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationUpdate} organizationUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationsUpdate: (uuid: string, organizationUpdate: OrganizationUpdate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * OrganizationsApi - functional programming interface
 * @export
 */
export declare const OrganizationsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationsDelete(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationsGet(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Organization>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationsListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationsList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationsListOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<OrganizationList>>;
    /**
     *
     * @param {OrganizationCreate} organizationCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationsCreate(organizationCreate: OrganizationCreate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Organization>>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationUpdate} organizationUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationsUpdate(uuid: string, organizationUpdate: OrganizationUpdate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Organization>>;
};
/**
 * OrganizationsApi - factory interface
 * @export
 */
export declare const OrganizationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiOrganizationsDelete(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationsGet(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<Organization>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationsListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiOrganizationsList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationsListOrderEnum, options?: RawAxiosRequestConfig): AxiosPromise<OrganizationList>;
    /**
     *
     * @param {OrganizationCreate} organizationCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiOrganizationsCreate(organizationCreate: OrganizationCreate, options?: RawAxiosRequestConfig): AxiosPromise<Organization>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationUpdate} organizationUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiOrganizationsUpdate(uuid: string, organizationUpdate: OrganizationUpdate, options?: RawAxiosRequestConfig): AxiosPromise<Organization>;
};
/**
 * OrganizationsApi - object-oriented interface
 * @export
 * @class OrganizationsApi
 * @extends {BaseAPI}
 */
export declare class OrganizationsApi extends BaseAPI {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    deleteApiOrganizationsDelete(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    getApiOrganizationsGet(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Organization, any>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiOrganizationsListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    getApiOrganizationsList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiOrganizationsListOrderEnum, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<OrganizationList, any>>;
    /**
     *
     * @param {OrganizationCreate} organizationCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    postApiOrganizationsCreate(organizationCreate: OrganizationCreate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Organization, any>>;
    /**
     *
     * @param {string} uuid
     * @param {OrganizationUpdate} organizationUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof OrganizationsApi
     */
    putApiOrganizationsUpdate(uuid: string, organizationUpdate: OrganizationUpdate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Organization, any>>;
}
/**
 * @export
 */
export declare const GetApiOrganizationsListOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiOrganizationsListOrderEnum = typeof GetApiOrganizationsListOrderEnum[keyof typeof GetApiOrganizationsListOrderEnum];
/**
 * PasswordResetApi - axios parameter creator
 * @export
 */
export declare const PasswordResetApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Validate token and reset password.
     * @param {ResetPassword} resetPassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiResetPassword: (resetPassword: ResetPassword, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Request a password reset email.
     * @param {ResetPasswordRequest} resetPasswordRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiResetPasswordRequest: (resetPasswordRequest: ResetPasswordRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Validate if a token is still valid (for frontend verification).
     * @param {TokenValidation} tokenValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiValidateResetToken: (tokenValidation: TokenValidation, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PasswordResetApi - functional programming interface
 * @export
 */
export declare const PasswordResetApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Validate token and reset password.
     * @param {ResetPassword} resetPassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiResetPassword(resetPassword: ResetPassword, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostApiSendUserInvitation200Response>>;
    /**
     *
     * @summary Request a password reset email.
     * @param {ResetPasswordRequest} resetPasswordRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiResetPasswordRequest(resetPasswordRequest: ResetPasswordRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostApiSendUserInvitation200Response>>;
    /**
     *
     * @summary Validate if a token is still valid (for frontend verification).
     * @param {TokenValidation} tokenValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiValidateResetToken(tokenValidation: TokenValidation, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostApiValidateResetToken200Response>>;
};
/**
 * PasswordResetApi - factory interface
 * @export
 */
export declare const PasswordResetApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Validate token and reset password.
     * @param {ResetPassword} resetPassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiResetPassword(resetPassword: ResetPassword, options?: RawAxiosRequestConfig): AxiosPromise<PostApiSendUserInvitation200Response>;
    /**
     *
     * @summary Request a password reset email.
     * @param {ResetPasswordRequest} resetPasswordRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiResetPasswordRequest(resetPasswordRequest: ResetPasswordRequest, options?: RawAxiosRequestConfig): AxiosPromise<PostApiSendUserInvitation200Response>;
    /**
     *
     * @summary Validate if a token is still valid (for frontend verification).
     * @param {TokenValidation} tokenValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiValidateResetToken(tokenValidation: TokenValidation, options?: RawAxiosRequestConfig): AxiosPromise<PostApiValidateResetToken200Response>;
};
/**
 * PasswordResetApi - object-oriented interface
 * @export
 * @class PasswordResetApi
 * @extends {BaseAPI}
 */
export declare class PasswordResetApi extends BaseAPI {
    /**
     *
     * @summary Validate token and reset password.
     * @param {ResetPassword} resetPassword
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PasswordResetApi
     */
    postApiResetPassword(resetPassword: ResetPassword, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PostApiSendUserInvitation200Response, any>>;
    /**
     *
     * @summary Request a password reset email.
     * @param {ResetPasswordRequest} resetPasswordRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PasswordResetApi
     */
    postApiResetPasswordRequest(resetPasswordRequest: ResetPasswordRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PostApiSendUserInvitation200Response, any>>;
    /**
     *
     * @summary Validate if a token is still valid (for frontend verification).
     * @param {TokenValidation} tokenValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PasswordResetApi
     */
    postApiValidateResetToken(tokenValidation: TokenValidation, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PostApiValidateResetToken200Response, any>>;
}
/**
 * SurveyOperationsApi - axios parameter creator
 * @export
 */
export declare const SurveyOperationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSurveyForm: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SurveyOperationsApi - functional programming interface
 * @export
 */
export declare const SurveyOperationsApiFp: (configuration?: Configuration) => {
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSurveyForm(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FormSchema>>;
};
/**
 * SurveyOperationsApi - factory interface
 * @export
 */
export declare const SurveyOperationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSurveyForm(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<FormSchema>;
};
/**
 * SurveyOperationsApi - object-oriented interface
 * @export
 * @class SurveyOperationsApi
 * @extends {BaseAPI}
 */
export declare class SurveyOperationsApi extends BaseAPI {
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SurveyOperationsApi
     */
    getSurveyForm(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<FormSchema, any>>;
}
/**
 * SurveysApi - axios parameter creator
 * @export
 */
export declare const SurveysApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a survey
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSurvey: (surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSurvey: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSurvey: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Returns list of surveys
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. title)
     * @param {ListSurveysOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSurveys: (page?: number, limit?: number, search?: string, sort?: string, order?: ListSurveysOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update a survey
     * @param {string} uuid
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSurvey: (uuid: string, surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SurveysApi - functional programming interface
 * @export
 */
export declare const SurveysApiFp: (configuration?: Configuration) => {
    /**
     * Create a survey
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSurvey(surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SurveyModel>>;
    /**
     * Delete a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSurvey(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSurvey(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SurveyModel>>;
    /**
     * Returns list of surveys
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. title)
     * @param {ListSurveysOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSurveys(page?: number, limit?: number, search?: string, sort?: string, order?: ListSurveysOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SurveyList>>;
    /**
     * Update a survey
     * @param {string} uuid
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSurvey(uuid: string, surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SurveyModel>>;
};
/**
 * SurveysApi - factory interface
 * @export
 */
export declare const SurveysApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a survey
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createSurvey(surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig): AxiosPromise<SurveyModel>;
    /**
     * Delete a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteSurvey(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSurvey(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<SurveyModel>;
    /**
     * Returns list of surveys
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. title)
     * @param {ListSurveysOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listSurveys(page?: number, limit?: number, search?: string, sort?: string, order?: ListSurveysOrderEnum, options?: RawAxiosRequestConfig): AxiosPromise<SurveyList>;
    /**
     * Update a survey
     * @param {string} uuid
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateSurvey(uuid: string, surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig): AxiosPromise<SurveyModel>;
};
/**
 * SurveysApi - object-oriented interface
 * @export
 * @class SurveysApi
 * @extends {BaseAPI}
 */
export declare class SurveysApi extends BaseAPI {
    /**
     * Create a survey
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SurveysApi
     */
    createSurvey(surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SurveyModel, any>>;
    /**
     * Delete a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SurveysApi
     */
    deleteSurvey(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     * Returns a survey
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SurveysApi
     */
    getSurvey(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SurveyModel, any>>;
    /**
     * Returns list of surveys
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. title)
     * @param {ListSurveysOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SurveysApi
     */
    listSurveys(page?: number, limit?: number, search?: string, sort?: string, order?: ListSurveysOrderEnum, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SurveyList, any>>;
    /**
     * Update a survey
     * @param {string} uuid
     * @param {SurveyRequest} surveyRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SurveysApi
     */
    updateSurvey(uuid: string, surveyRequest: SurveyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<SurveyModel, any>>;
}
/**
 * @export
 */
export declare const ListSurveysOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type ListSurveysOrderEnum = typeof ListSurveysOrderEnum[keyof typeof ListSurveysOrderEnum];
/**
 * UserInvitationsApi - axios parameter creator
 * @export
 */
export declare const UserInvitationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Accept an invitation and set user password.
     * @param {UserInvitationAccept} userInvitationAccept
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiAcceptUserInvitation: (userInvitationAccept: UserInvitationAccept, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Send an invitation to a user.
     * @param {UserInvitationRequest} userInvitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiSendUserInvitation: (userInvitationRequest: UserInvitationRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Validate if an invitation token is still valid.
     * @param {UserInvitationValidation} userInvitationValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiValidateInvitationToken: (userInvitationValidation: UserInvitationValidation, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UserInvitationsApi - functional programming interface
 * @export
 */
export declare const UserInvitationsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Accept an invitation and set user password.
     * @param {UserInvitationAccept} userInvitationAccept
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiAcceptUserInvitation(userInvitationAccept: UserInvitationAccept, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostApiSendUserInvitation200Response>>;
    /**
     *
     * @summary Send an invitation to a user.
     * @param {UserInvitationRequest} userInvitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiSendUserInvitation(userInvitationRequest: UserInvitationRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostApiSendUserInvitation200Response>>;
    /**
     *
     * @summary Validate if an invitation token is still valid.
     * @param {UserInvitationValidation} userInvitationValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiValidateInvitationToken(userInvitationValidation: UserInvitationValidation, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostApiValidateInvitationToken200Response>>;
};
/**
 * UserInvitationsApi - factory interface
 * @export
 */
export declare const UserInvitationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Accept an invitation and set user password.
     * @param {UserInvitationAccept} userInvitationAccept
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiAcceptUserInvitation(userInvitationAccept: UserInvitationAccept, options?: RawAxiosRequestConfig): AxiosPromise<PostApiSendUserInvitation200Response>;
    /**
     *
     * @summary Send an invitation to a user.
     * @param {UserInvitationRequest} userInvitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiSendUserInvitation(userInvitationRequest: UserInvitationRequest, options?: RawAxiosRequestConfig): AxiosPromise<PostApiSendUserInvitation200Response>;
    /**
     *
     * @summary Validate if an invitation token is still valid.
     * @param {UserInvitationValidation} userInvitationValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiValidateInvitationToken(userInvitationValidation: UserInvitationValidation, options?: RawAxiosRequestConfig): AxiosPromise<PostApiValidateInvitationToken200Response>;
};
/**
 * UserInvitationsApi - object-oriented interface
 * @export
 * @class UserInvitationsApi
 * @extends {BaseAPI}
 */
export declare class UserInvitationsApi extends BaseAPI {
    /**
     *
     * @summary Accept an invitation and set user password.
     * @param {UserInvitationAccept} userInvitationAccept
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserInvitationsApi
     */
    postApiAcceptUserInvitation(userInvitationAccept: UserInvitationAccept, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PostApiSendUserInvitation200Response, any>>;
    /**
     *
     * @summary Send an invitation to a user.
     * @param {UserInvitationRequest} userInvitationRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserInvitationsApi
     */
    postApiSendUserInvitation(userInvitationRequest: UserInvitationRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PostApiSendUserInvitation200Response, any>>;
    /**
     *
     * @summary Validate if an invitation token is still valid.
     * @param {UserInvitationValidation} userInvitationValidation
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserInvitationsApi
     */
    postApiValidateInvitationToken(userInvitationValidation: UserInvitationValidation, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<PostApiValidateInvitationToken200Response, any>>;
}
/**
 * UsersApi - axios parameter creator
 * @export
 */
export declare const UsersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiUsersDelete: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiUsersGet: (uuid: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiUsersList: (page?: number, limit?: number, search?: string, sort?: string, order?: GetApiUsersListOrderEnum, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {UserCreate} userCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiUsersCreate: (userCreate: UserCreate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} uuid
     * @param {UserUpdate} userUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiUsersUpdate: (uuid: string, userUpdate: UserUpdate, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UsersApi - functional programming interface
 * @export
 */
export declare const UsersApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiUsersDelete(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiUsersGet(uuid: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<User>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiUsersList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiUsersListOrderEnum, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserList>>;
    /**
     *
     * @param {UserCreate} userCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiUsersCreate(userCreate: UserCreate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<User>>;
    /**
     *
     * @param {string} uuid
     * @param {UserUpdate} userUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiUsersUpdate(uuid: string, userUpdate: UserUpdate, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<User>>;
};
/**
 * UsersApi - factory interface
 * @export
 */
export declare const UsersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteApiUsersDelete(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiUsersGet(uuid: string, options?: RawAxiosRequestConfig): AxiosPromise<User>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getApiUsersList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiUsersListOrderEnum, options?: RawAxiosRequestConfig): AxiosPromise<UserList>;
    /**
     *
     * @param {UserCreate} userCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postApiUsersCreate(userCreate: UserCreate, options?: RawAxiosRequestConfig): AxiosPromise<User>;
    /**
     *
     * @param {string} uuid
     * @param {UserUpdate} userUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    putApiUsersUpdate(uuid: string, userUpdate: UserUpdate, options?: RawAxiosRequestConfig): AxiosPromise<User>;
};
/**
 * UsersApi - object-oriented interface
 * @export
 * @class UsersApi
 * @extends {BaseAPI}
 */
export declare class UsersApi extends BaseAPI {
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    deleteApiUsersDelete(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {string} uuid
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getApiUsersGet(uuid: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<User, any>>;
    /**
     *
     * @param {number} [page] Page number
     * @param {number} [limit] Number of items per page
     * @param {string} [search] Search term
     * @param {string} [sort] Field to sort by (e.g. name)
     * @param {GetApiUsersListOrderEnum} [order] Sort direction (ASC or DESC)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getApiUsersList(page?: number, limit?: number, search?: string, sort?: string, order?: GetApiUsersListOrderEnum, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<UserList, any>>;
    /**
     *
     * @param {UserCreate} userCreate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    postApiUsersCreate(userCreate: UserCreate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<User, any>>;
    /**
     *
     * @param {string} uuid
     * @param {UserUpdate} userUpdate
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    putApiUsersUpdate(uuid: string, userUpdate: UserUpdate, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<User, any>>;
}
/**
 * @export
 */
export declare const GetApiUsersListOrderEnum: {
    readonly Asc: "ASC";
    readonly Desc: "DESC";
};
export type GetApiUsersListOrderEnum = typeof GetApiUsersListOrderEnum[keyof typeof GetApiUsersListOrderEnum];
